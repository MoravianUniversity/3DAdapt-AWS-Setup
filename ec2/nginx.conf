upstream app_server {
  # fail_timeout=0 means we always retry an upstream even if it failed to return a good HTTP response
  server unix:/run/gunicorn.sock fail_timeout=0;
}

server {
  listen 80 deferred;
  server_name 3dadapt.xyz;

  # TODO
  #listen 443 ssl http2;
  #listen [::]:443 ssl http2;
  #ssl_certificate /etc/letsencrypt/live/3dadapt.xyz/fullchain.pem;
  #ssl_certificate_key /etc/letsencrypt/live/3dadapt.xyz/privkey.pem;

  client_max_body_size 64M;
  port_in_redirect off;
  gzip_static on;
  # TODO: keepalive_timeout 5;

  # static files
  root /home/ec2-user/3DAdapt/server;
  location /static {
    try_files $uri @proxy_to_app;
  }
  location /files {
    try_files $uri @proxy_to_app;
  }
  location /images {
    try_files $uri @proxy_to_app;
  }

  # all other requests go directly to the app
  error_page 418 = @proxy_to_app;
  location / {
    return 418;
  }

  # proxy the request to the app server
  location @proxy_to_app {
    proxy_set_header Host $host;  # or $http_host?
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "Upgrade";
    proxy_http_version 1.1;
    proxy_redirect off;  # don't want nginx trying to do something clever with redirects, set Host header above already
    proxy_pass http://app_server;
  }

  # TODO:
  #error_page 500 502 503 504 /500.html;
  #location = /500.html {
  #  root /path/to/app/current/public;
  #}
}
